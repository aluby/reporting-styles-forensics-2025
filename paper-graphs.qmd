---
title: "paper-graphs"
format: html
editor: visual
---

```{r}
# set up
library(ggplot2)
library(dplyr)
paper_theme <- theme_minimal(base_family = "Atkinson Hyperlegible", base_size = 16)
```

```{r}
# 95% credible interval on Hicklin - 3 category responses
response3_after_fitting <- read.csv("fitting_on_real_data/Hicklin_2025/Hicklin_3category_fitting.csv")
#theta coverage
ggplot(response3_after_fitting, aes(y = exID, x = theta_hat, color = ThetaContainsZero)) +
  geom_errorbarh(aes(xmin = theta_low, xmax = theta_high), height = 0.3) +
  geom_point( color = "black") +
  scale_color_manual(values = c("FALSE" = "purple", "TRUE" = "deeppink")) +
  labs(x = "95% Credible Interval", y = "Theta Estimates (Examiner Proficiency)") +
  theme_minimal() +
  theme(
    legend.position = "none",  
    panel.grid.major.y = element_blank(),
     panel.background = element_rect(fill = "transparent", color = NA),
    plot.background = element_rect(fill = "transparent", color = NA), 
    legend.background = element_rect(fill = "transparent", color = NA),
    legend.box.background = element_rect(fill = "transparent", color = NA)
  )

#beta coverage
ggplot(response3_after_fitting, aes(y = pairID, x = beta_hat, color = BetaContainsZero)) +
  geom_errorbarh(aes(xmin = beta_low, xmax = beta_high), height = 0.3) +
  geom_point( color = "black") +
  scale_color_manual(values = c("FALSE" = "purple", "TRUE" = "deeppink")) +
  labs(x = "95% Credible Interval", y = "Beta Estimates (Item difficulty)") +
  theme_minimal() +
  theme(
    legend.position = "none",  
    panel.grid.major.y = element_blank(),
     panel.background = element_rect(fill = "transparent", color = NA),
    plot.background = element_rect(fill = "transparent", color = NA), 
    legend.background = element_rect(fill = "transparent", color = NA),
    legend.box.background = element_rect(fill = "transparent", color = NA)
  )
```

```{r}
# Ridgeplot of beta estimates by conclusion category

final_ridgeplot <- Hicklin |>
  drop_na(response5) |>
  left_join(ranef(hicklin_brms_model)$pairID |>
    as_tibble() |> 
    rownames_to_column(var = "pairID") |>
      mutate(pairID = as.numeric(pairID))) |> 
  mutate(
    beta_adj = `Estimate.Intercept` + 4.58*as.numeric(ground_truth == "N")
  ) |>
  ggplot() + 
  geom_density_ridges(aes(x = beta_adj, y = as.factor(response5), fill = as.factor(response5))) +
  scale_fill_viridis_d(option = "plasma", end = 0.8) +
  scale_y_discrete(labels=c("5" = "Exclusion", "4" = "Lean Exclusion",
                             "3" = "Inconclusive", "2" = "Lean Identification", "1" = "Identification")) +
  theme(
    legend.position = "none",  
    panel.grid.major.y = element_blank(),
     panel.background = element_rect(fill = "transparent", color = NA),
    plot.background = element_rect(fill = "transparent", color = NA), 
    legend.background = element_rect(fill = "transparent", color = NA),
    legend.box.background = element_rect(fill = "transparent", color = NA)
  ) +
  paper_theme +
     theme(legend.position = "none") +
  labs( x = "Beta Estimates", y = "", title = "Distribution of Beta Estimates for Each 
Conclusion Type", subtitle = "Only Non-mated Image Pairs")

ggsave("ridgeplot.png", final_ridgeplot)
```

```{r}
# posterior predictive check graphs - can plug in any brms model
library(bayesplot)
color_scheme_set("purple")
pp_check(hicklin_brms, type = "bars_grouped", group = "pairID", stat = "median" )
```

```{r}
# comparison plot of betas from Busey's model and from our model

# models ran to get the estimates from
hicklin_brms <- Hicklin %>% 
  mutate(
        "ds" = case_when(
      ground_truth == "M" ~ 0,
      ground_truth == "N" ~ 1
  )) %>% 
  brm(
    formula = response5 ~ ds + (1|pairID) + (1|exID),
    data = Hicklin,
  family = cumulative(probit),
  chains = 4,
  iter = 2000,
  seed = 6127,
  cores = 4
  )

hicklin_brms__notheta <- brm(
  formula = response5 ~ (1 | pairID),
  data = Hicklin,
  family = cumulative(probit),
  chains = 4,
  iter = 2000,
  seed = 6127,
  cores = 4
)

# need to take out NAs from the original Hicklin data set so that the image pairs line up to their correct estimates when we join the data sets together
hicklin_item_lookup <- Hicklin |>
  group_by(pairID) |>
  summarize(
    ground_truth = first(ground_truth)
  ) |>
  left_join( Hicklin |>
  drop_na(response3) |>
  group_by(pairID) |>
  summarize(
    ground_truth = first(ground_truth)
  ) |>
  ungroup() |>
  mutate(
    new_pairID = 1:n()
  ))

hicklin_compare <- ranef(hicklin_brms_model)$pairID %>% as.tibble() %>% 
  mutate(
    "pairID" = row_number()
  )
hicklin_compare2 <- ranef(hicklin_brms__notheta)$pairID %>% as.tibble() %>% 
  mutate(
    "pairID" = row_number()
  )
  
hicklin_busey_comparison <- hicklin_compare %>% 
  left_join(hicklin_compare2, by = "pairID") %>% 
  left_join(hicklin_item_lookup, by = c("pairID" = "new_pairID"))

no_theta_comparison_plot <- ggplot(hicklin_busey_comparison) +
  geom_point(aes(x = Estimate.Intercept.y, y = Estimate.Intercept.x, color = ground_truth)) +
  geom_abline(yintercept = 0, slope = 1, color = "#B12A90FF") +
  scale_color_viridis_d(option = "plasma", end = 0.8, labels = 
                          c("M" = "Mated",
                            "N" = "Non-Mated")) +
  labs(x = "No Theta Model Beta Estimates", y = "Our Model Beta Estimates", title = "No Theta Model Estimates Vs. 
       Theta Model Estimates", color = "Ground Truth") +
  paper_theme 
  
ggsave("no_theta_comparison_plot.png", no_theta_comparison_plot)

```

```{r}
# simulation - beta_cov_by_model

beta_cov_by_model_paper <- prior_misspec_summary_repeated |> 
  group_by(n_items, condition) |> 
  ggplot(aes(x = n_items, y = beta_coverage, color = condition)) +
  geom_point() +
  geom_line() +
  geom_hline(yintercept = 0.95, linetype = "dashed", color = "black") +
  scale_color_viridis_d(
    option = "plasma", 
    end = 0.8,
    name = "Condition",
    breaks = c("No theta sim", "Both skewed", "Mixture", "Skewed beta", "Skewed theta", "No theta model"),
    labels = c("No Theta Sim", "Both Skewed", "Mixture", "Skewed Beta", "Skewed Theta", "No Theta Model")) +
      labs(
        title = "Beta Coverage by Model Misspecification",
        x = "Number of Items",
        y = "Average Beta Coverage"
      ) +
      paper_theme

ggsave("beta_cov_by_model_paper.png", beta_cov_by_model_paper, width = 8, height = 4)
```

```{r}
# simulation - skew_coverage

skew_coverage_paper <- prior_misspec_per_run_repeated |> 
  filter(condition == c("Skewed theta", "Skewed beta", "Both skewed", "Mixture")) |> 
  ggplot(aes(x = condition, y = theta_coverage)) +
  geom_boxplot() +
  geom_hline(yintercept = 0.95, linetype = "dashed", color = "red") +
  ylim(0.6,1) +
  labs(
    title = "Theta Coverage Across Skewed Simulations",
    x = "Condition",
    y = "Theta Coverage"
  ) +
  paper_theme

ggsave("skew_coverage_paper.png", skew_coverage_paper, width = 6, height = 4)
```

```{r}
# simulation - true_vs_estimated_beta

true_vs_est_beta <- ggplot(true_vs_est_scatter, aes(x = beta_estimate, y = beta)) +
  geom_point(color = "black") +
  geom_errorbar(aes(
    ymin = beta_lower,
    ymax = beta_upper,
    color = factor(beta_covered)
  )) +
  geom_abline() +
  scale_color_manual(
    values = c("0" = "#E16462FF", "1" = "black"),
    name = "Coverage",
    labels = c("0" = "Not Covered", "1" = "Covered")
  ) +
  labs(
    title = "True vs. Estimated Beta",
    x = "Estimated Beta",
    y = "True Beta"
  ) +
  paper_theme

ggsave("true_vs_est_beta.png", true_vs_est_beta, width = 6, height = 4)
```

```{r}
# simulation - bayes_vs_frequentist

bayes_vs_frequentist_paper <- categories_summary_repeated |> 
  bind_rows(frequentist_summary_repeated) |> 
  mutate(category_system = factor(category_system, 
    levels = c(
    "3-category", "3-category-freq", 
    "5-category A", "5-category-a-freq", 
    "5-category B", "5-category-b-freq"
  ),
    labels = c("3 cat (Bayes)", "3 cat (Freq)",
               "5 cat A (Bayes)", "5 cat A (Freq)",
               "5 cat b (Bayes)", "5-cat B (Freq)")
  )) |> 
  ggplot(aes(x = category_system, y = theta_coverage)) +
  geom_boxplot() +
  geom_hline(yintercept = 0.95, linetype = "dashed", color = "red") +
  ylim(0,1) +
  labs(
    title = "Theta Coverage: Bayesian vs. Frequentist",
    x = "Conclusion Scale",
    y = "Average Theta Coverage"
  ) +
  paper_theme +
  theme(
    axis.text.x = element_text(angle = 35, hjust = 1, size = 11)
  )

ggsave("bayes_vs_frequentist_paper.png", bayes_vs_frequentist_paper, width = 6, height = 4)
```

```{r}
# simulation - corr_plots (appendix)

theta_corr_paper <- ggplot(categories_summary_repeated, aes(x = n_items, y = theta_correlation, color = category_system)) +
  geom_point() +
  geom_line() +
  scale_color_viridis_d(option = "plasma", end = 0.8) +
  labs(
    title = "Theta Correlation by Number of Items",
    x = "Number of Items",
    y = "Average Theta Correlation",
    color = "Conclusion Scale"
  ) +
  paper_theme 


beta_corr_paper <- ggplot(categories_summary_repeated, aes(x = n_items, y = beta_correlation, color = category_system)) +
  geom_point() +
  geom_line() +
  scale_color_viridis_d(option = "plasma", end = 0.8) +
  labs(
    title = "Beta Correlation by Number of Items",
    x = "Number of Items",
    y = "Average Beta Correlation",
    color = "Conclusion Scale"
  ) +
  paper_theme

corr_plots_paper <- theta_corr_paper / beta_corr_paper + plot_layout(guides = "collect") & theme(legend.position = "bottom")

ggsave("corr_plots_paper.png", corr_plots_paper, width = 8, height = 10)
```

```{r}
# simulation - model_runtime (appendix)

model_runtime_paper <- ggplot(categories_summary_repeated, aes(x = n_items, y = time_to_fit, color = category_system)) +
  geom_point() +
  geom_line() +
  labs(
    title = "Model Runtime by Number of Items",
    x = "Number of Items",
    y = "Average Time (seconds)",
    color = "Conlusion Scale"
  ) +
  scale_color_viridis_d(option = "plasma", end = 0.8) +
  paper_theme

ggsave("model_runtime_paper.png", model_runtime_paper, width = 8, height = 4)
```
