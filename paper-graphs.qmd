---
title: "paper-graphs"
format: html
editor: visual
---

```{r}
# set up
library(ggplot2)
paper_theme <- theme_minimal(base_family = "Atkinson Hyperlegible", base_size = 16)
```

```{r}
#Simualations - Theta coverage by category system
ggplot(categories_per_run_repeated) +
  aes(x = category_system, y = theta_coverage) +
  geom_boxplot(fill = "darkgray") +
  labs(
    title = "Theta coverage by category system",
    x = "Category system",
    y = "Theta coverage"
  )
```

```{r}
# 95% credible interval on Hicklin - 3 category responses
response3_after_fitting <- read.csv("fitting_on_real_data/Hicklin_2025/Hicklin_3category_fitting.csv")
#theta coverage
ggplot(response3_after_fitting, aes(y = exID, x = theta_hat, color = ThetaContainsZero)) +
  geom_errorbarh(aes(xmin = theta_low, xmax = theta_high), height = 0.3) +
  geom_point( color = "black") +
  scale_color_manual(values = c("FALSE" = "purple", "TRUE" = "deeppink")) +
  labs(x = "95% Credible Interval", y = "Theta Estimates (Examiner Proficiency)") +
  theme_minimal() +
  theme(
    legend.position = "none",  
    panel.grid.major.y = element_blank(),
     panel.background = element_rect(fill = "transparent", color = NA),
    plot.background = element_rect(fill = "transparent", color = NA), 
    legend.background = element_rect(fill = "transparent", color = NA),
    legend.box.background = element_rect(fill = "transparent", color = NA)
  )

#beta coverage
ggplot(response3_after_fitting, aes(y = pairID, x = beta_hat, color = BetaContainsZero)) +
  geom_errorbarh(aes(xmin = beta_low, xmax = beta_high), height = 0.3) +
  geom_point( color = "black") +
  scale_color_manual(values = c("FALSE" = "purple", "TRUE" = "deeppink")) +
  labs(x = "95% Credible Interval", y = "Beta Estimates (Item difficulty)") +
  theme_minimal() +
  theme(
    legend.position = "none",  
    panel.grid.major.y = element_blank(),
     panel.background = element_rect(fill = "transparent", color = NA),
    plot.background = element_rect(fill = "transparent", color = NA), 
    legend.background = element_rect(fill = "transparent", color = NA),
    legend.box.background = element_rect(fill = "transparent", color = NA)
  )
```

```{r}
# Ridgeplot of beta estimates by conclusion category

final_ridgeplot <- Hicklin |>
  drop_na(response5) |>
  left_join(ranef(hicklin_brms_model)$pairID |>
    as_tibble() |> 
    rownames_to_column(var = "pairID") |>
      mutate(pairID = as.numeric(pairID))) |> 
  mutate(
    beta_adj = `Estimate.Intercept` + 4.58*as.numeric(ground_truth == "N")
  ) |>
  ggplot() + 
  geom_density_ridges(aes(x = beta_adj, y = as.factor(response5), fill = as.factor(response5))) +
  scale_fill_viridis_d(option = "plasma", end = 0.8) +
  scale_y_discrete(labels=c("5" = "Exclusion", "4" = "Lean Exclusion",
                             "3" = "Inconclusive", "2" = "Lean Identification", "1" = "Identification")) +
  theme(
    legend.position = "none",  
    panel.grid.major.y = element_blank(),
     panel.background = element_rect(fill = "transparent", color = NA),
    plot.background = element_rect(fill = "transparent", color = NA), 
    legend.background = element_rect(fill = "transparent", color = NA),
    legend.box.background = element_rect(fill = "transparent", color = NA)
  ) +
  paper_theme +
     theme(legend.position = "none") +
  labs( x = "Beta Estimates", y = "", title = "Distribution of Beta Estimates for Each 
Conclusion Type", subtitle = "Only Non-mated Image Pairs")

ggsave("ridgeplot.png", final_ridgeplot)
```

```{r}
# posterior predictive check graphs - can plug in any brms model
library(bayesplot)
color_scheme_set("purple")
pp_check(hicklin_brms_subset, type = "bars_grouped", group = "pairID", stat = "median" )
```
